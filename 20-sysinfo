#!/bin/bash
set -o nounset
set -o pipefail

sec2time () {
  local input=${1:-0}
  if (( input < 60 )); then
    echo "${input} seconds"
  else
    local days=$(( input/86400 ))
    input=$(( input%86400 ))
    local hours=$(( input/3600 ))
    input=$(( input%3600 ))
    local mins=$(( input/60 ))

    local dS="s" hS="s" mS="s"
    (( days == 1 )) && dS=""
    (( hours == 1 )) && hS=""
    (( mins == 1 )) && mS=""

    echo "${days} day${dS}, ${hours} hour${hS}, ${mins} minute${mS}"
  fi
}


if [ -n "$SUDO_USER" ]; then
  user="$SUDO_USER"
else
  user="$(whoami)"
fi


# Last login (robust, inkl. "Never logged in")
lastlog_raw="$(lastlog -u "$(whoami)" | tail -n +2)"
if echo "$lastlog_raw" | grep -qi "never"; then
  lastlog="Never logged in"
else
  # Beispielausgabe: username  pts/0 1.2.3.4  Mon Sep 29 10:42:31 +0200 2025
  # Wir nehmen Host/TTY und Datum ab Spalte 3
  lastlog="$(echo "$lastlog_raw" | awk '{host=$3; $1=$2=$3=""; sub(/^ +/,""); print $0 " from " host}')"
fi

# Distro
if [ -r /etc/os-release ]; then
  distro="$(. /etc/os-release; echo "${PRETTY_NAME}")"
else
  distro="$(uname -s)"
fi

kernel="$(uname -sr)"

# Updates: schneller, ohne Locks, mit Timeout
# Hinweis: Zählt nur Zeilen die mit "Inst " beginnen (simuliertes Upgrade)
updates="$(
  timeout 3s apt-get -o Debug::NoLocking=1 -q -s upgrade 2>/dev/null | grep -c '^Inst '
)"

hostnametxt="$(hostname)"

# Öffentliche IP (mit Timeout & Fallback-Text)
hostnameext="$(curl -s --max-time 2 ifconfig.me || true)"
[ -z "$hostnameext" ] && hostnameext="(no external IP)"

# Uptime + Boot-Time
uptime="$(sec2time "$(cut -d '.' -f 1 /proc/uptime)")"
boottime="$(date -d "@$(grep btime /proc/stat | awk '{print $2}')" +"%d-%m-%Y %H:%M:%S")"
uptime="${uptime} (${boottime})"

W="\e[0;39m"
G="\e[1;32m"

# Ausgabe
echo -e "
Distro...........: ${distro}
Kernel...........: ${kernel}

Hostname.........: ${hostnametxt} | ${hostnameext}

User.............: ${user}
Last Login.......: ${lastlog}
Uptime...........: ${uptime}

Updates..........: ${G}${updates}${W}
"
if [ -f /var/run/reboot-required ]; then
  echo "*** System restart required ***"
fi

#!/bin/bash

function sec2time (){
  local input=$1

  if [ $input -lt 60 ]; then
    echo "$input seconds"
  else
    ((days=input/86400))
    ((input=input%86400))
    ((hours=input/3600))
    ((input=input%3600))
    ((mins=input/60))

    local daysPlural="s"
    local hoursPlural="s"
    local minsPlural="s"

    if [ $days -eq 1 ]; then
      daysPlural=""
    fi

    if [ $hours -eq 1 ]; then
      hoursPlural=""
    fi

    if [ $mins -eq 1 ]; then
      minsPlural=""
    fi

    echo "$days day$daysPlural, $hours hour$hoursPlural, $mins minute$minsPlural"
  fi
}


user=$(whoami)
# ip=`ifconfig $(route | grep default | awk '{ print $8 }') | grep "inet addr" | awk -F: '{print $2}' | awk '{print $1}'`
lastlog=`lastlog -u ${user} | grep -v Latest |  awk '{ printf $6" "$5" "$9" at "$7" from "$3 }'`
distro=`cat /etc/*release | grep "PRETTY_NAME" | cut -d "=" -f 2- | sed 's/"//g'`
kernel=`uname -sr`
updates=`apt-get -q -y --ignore-hold --allow-change-held-packages --allow-unauthenticated -s dist-upgrade | /bin/grep  ^Inst | wc -l`

hostinfo=`hostname` | `curl ifconfig.me`

# uptime=`uptime | grep -ohe 'up .*' | sed 's/,/\ hours/g' | awk '{ printf $2" "$3 }'`
uptime="$(sec2time $(cut -d "." -f 1 /proc/uptime))"
uptime="$uptime ($(date -d "@"$(grep btime /proc/stat | cut -d " " -f 2) +"%d-%m-%Y %H:%M:%S"))"

W="\e[0;39m"
G="\e[1;32m"

echo -e "
Distro...........: $distro
Kernel...........: $kernel

Hostname.........: $hostinfo

Last Login.......: $lastlog
Uptime...........: $uptime

Updates..........: $G$updates$W
"
if [ -f /var/run/reboot-required ]; then
	echo "*** System restart required ***"
fi
